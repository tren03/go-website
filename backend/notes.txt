chose to build the same project with vanilla js and then with a react framework later
for vanilla js decided to do server side rendering of the html pages
used clousure funcs to send data to handler funcs 

shifted to chi router to handle cors easier and have a http router to have better routing

supabase doesnt have official go docs, so going for third party libs (death)

supabase just gives a postgress uri, and we can use a native golang lib to access the data, peacful

so i downloaded different libs to check them out, but when i comment them in my project, run vendor and tidy, they are removed, package system is too good damn 


currently figuring out how to auth myself to add delete posts, thinking about JWT maybe, for my /loginView to redirect to admin securely
http cookies are the way to go hahaha


i have to figure out how to verify the jwt token i created, creating the jwt token is confusing

i figured out jwt, admin requests for html and the request granted only if its sent with valid jwt, we have a func to check that
now i sent html content to admin using response, but i need to extract and execute js of script tag seperately as it doesnt get executed by browser


we used jwt to verify every addition and deletion even after admin login


the error for not finding a env file was fatal, which causes my application to keep crashing and not look for the env variables available in the environmen

since i didnt knwo the port being assigned and my server and client were on same port, changed request from localhost:8080/posts to /posts

succesfully hosted on railway

created a local_dev_env branch and changed all the paths so that it can run locally wihout docker, whenever i need an update to the site, make copy of this branch and locally to make changes

The loading time was too long because i was sending down html content from the server side, so i now send down json array and render in client side

adding cacheing by storing the json response in session storage, so it doesnt keep hitting my server when it reloads

tested out client side rendering, seems very slow, switching back to server side (keeping client side rendering for now)
Need to implement lazy loaing to get it working better, look into text compression to better the load times
cache works like a charm




